{
  "contractName": "MemoryToken",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/MemoryToken.sol\":\"MemoryToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/ERC721Full.sol\":{\"keccak256\":\"0x2c9428b26856816aabc93836bad491818b513ebb65e79dd96b78f994bbce3c6f\",\"urls\":[\"bzz-raw://df88a09cdb67f443c89908d0b1ec154f6e5a4b0b2177580d9d2eae8d0e3d9cf1\",\"dweb:/ipfs/QmWaaSeg35RuBMD2vDnTggkjfTZbgFzupQoCWHgSpC3T8U\"]},\"project:/src/contracts/MemoryToken.sol\":{\"keccak256\":\"0x88f6d9312faf53b768e602b07d5ea9ce8cd20f25498af7aeb3587963b8ddda9e\",\"urls\":[\"bzz-raw://11d0f4e1ef4b776bc637846e00a8d8f836f1812d40dbf3443576fbc1f8f45353\",\"dweb:/ipfs/QmRSdPYPJqEmuU4DuzwhnwaRuSHqiJSN9QA7pNQ6N43XdN\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a2578063a22cb46511610071578063a22cb46514610349578063b88d4fde14610377578063c87b56dd1461043d578063d0def5211461045a578063e985e9c5146105105761010b565b80634f6ccce7146102e15780636352211e146102fe57806370a082311461031b57806395d89b41146103415761010b565b806318160ddd116100de57806318160ddd1461022f57806323b872dd146102495780632f745c591461027f57806342842e0e146102ab5761010b565b806301ffc9a71461011057806306fdde031461014b578063081812fc146101c8578063095ea7b314610201575b600080fd5b6101376004803603602081101561012657600080fd5b50356001600160e01b03191661053e565b604080519115158252519081900360200190f35b61015361055d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018d578181015183820152602001610175565b50505050905090810190601f1680156101ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e5600480360360208110156101de57600080fd5b50356105f4565b604080516001600160a01b039092168252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b038135169060200135610656565b005b610237610767565b60408051918252519081900360200190f35b61022d6004803603606081101561025f57600080fd5b506001600160a01b0381358116916020810135909116906040013561076d565b6102376004803603604081101561029557600080fd5b506001600160a01b0381351690602001356107c2565b61022d600480360360608110156102c157600080fd5b506001600160a01b03813581169160208101359091169060400135610841565b610237600480360360208110156102f757600080fd5b503561085c565b6101e56004803603602081101561031457600080fd5b50356108c2565b6102376004803603602081101561033157600080fd5b50356001600160a01b031661091c565b610153610984565b61022d6004803603604081101561035f57600080fd5b506001600160a01b03813516906020013515156109e5565b61022d6004803603608081101561038d57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103c857600080fd5b8201836020820111156103da57600080fd5b803590602001918460018302840111640100000000831117156103fc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ab1945050505050565b6101536004803603602081101561045357600080fd5b5035610b09565b6101376004803603604081101561047057600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561049b57600080fd5b8201836020820111156104ad57600080fd5b803590602001918460018302840111640100000000831117156104cf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610bee945050505050565b6101376004803603604081101561052657600080fd5b506001600160a01b0381358116916020013516610c2a565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105e95780601f106105be576101008083540402835291602001916105e9565b820191906000526020600020905b8154815290600101906020018083116105cc57829003601f168201915b505050505090505b90565b60006105ff82610c58565b61063a5760405162461bcd60e51b815260040180806020018281038252602c8152602001806115f1602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b6000610661826108c2565b9050806001600160a01b0316836001600160a01b031614156106b45760405162461bcd60e51b81526004018080602001828103825260218152602001806116a16021913960400191505060405180910390fd5b336001600160a01b03821614806106d057506106d08133610c2a565b61070b5760405162461bcd60e51b81526004018080602001828103825260388152602001806115666038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6107773382610c75565b6107b25760405162461bcd60e51b81526004018080602001828103825260318152602001806116c26031913960400191505060405180910390fd5b6107bd838383610d19565b505050565b60006107cd8361091c565b821061080a5760405162461bcd60e51b815260040180806020018281038252602b8152602001806114b9602b913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902080548390811061082e57fe5b9060005260206000200154905092915050565b6107bd83838360405180602001604052806000815250610ab1565b6000610866610767565b82106108a35760405162461bcd60e51b815260040180806020018281038252602c8152602001806116f3602c913960400191505060405180910390fd5b600782815481106108b057fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806109165760405162461bcd60e51b81526004018080602001828103825260298152602001806115c86029913960400191505060405180910390fd5b92915050565b60006001600160a01b0382166109635760405162461bcd60e51b815260040180806020018281038252602a81526020018061159e602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061091690610d38565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105e95780601f106105be576101008083540402835291602001916105e9565b6001600160a01b038216331415610a43576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610abc84848461076d565b610ac884848484610d3c565b610b035760405162461bcd60e51b81526004018080602001828103825260328152602001806114e46032913960400191505060405180910390fd5b50505050565b6060610b1482610c58565b610b4f5760405162461bcd60e51b815260040180806020018281038252602f815260200180611672602f913960400191505060405180910390fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610be25780601f10610bb757610100808354040283529160200191610be2565b820191906000526020600020905b815481529060010190602001808311610bc557829003601f168201915b50505050509050919050565b600080610c0a6001610bfe610767565b9063ffffffff610e6f16565b9050610c168482610ed0565b610c208184610ef1565b5060019392505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b6000610c8082610c58565b610cbb5760405162461bcd60e51b815260040180806020018281038252602c81526020018061153a602c913960400191505060405180910390fd5b6000610cc6836108c2565b9050806001600160a01b0316846001600160a01b03161480610d015750836001600160a01b0316610cf6846105f4565b6001600160a01b0316145b80610d115750610d118185610c2a565b949350505050565b610d24838383610f54565b610d2e8382611098565b6107bd828261118d565b5490565b6000610d50846001600160a01b03166111cb565b610d5c57506001610d11565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610dd6578181015183820152602001610dbe565b50505050905090810190601f168015610e035780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610e2557600080fd5b505af1158015610e39573d6000803e3d6000fd5b505050506040513d6020811015610e4f57600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b600082820183811015610ec9576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610eda82826111d1565b610ee4828261118d565b610eed81611302565b5050565b610efa82610c58565b610f355760405162461bcd60e51b815260040180806020018281038252602c81526020018061161d602c913960400191505060405180910390fd5b6000828152600b6020908152604090912082516107bd92840190611400565b826001600160a01b0316610f67826108c2565b6001600160a01b031614610fac5760405162461bcd60e51b81526004018080602001828103825260298152602001806116496029913960400191505060405180910390fd5b6001600160a01b038216610ff15760405162461bcd60e51b81526004018080602001828103825260248152602001806115166024913960400191505060405180910390fd5b610ffa81611346565b6001600160a01b038316600090815260036020526040902061101b90611383565b6001600160a01b038216600090815260036020526040902061103c9061139a565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152600560205260408120546110c290600163ffffffff6113a316565b60008381526006602052604090205490915080821461115d576001600160a01b03841660009081526005602052604081208054849081106110ff57fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061113d57fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b038416600090815260056020526040902080549061118690600019830161147e565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b3b151590565b6001600160a01b03821661122c576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61123581610c58565b15611287576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600390915290206112c69061139a565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000818152600260205260409020546001600160a01b03161561138057600081815260026020526040902080546001600160a01b03191690555b50565b805461139690600163ffffffff6113a316565b9055565b80546001019055565b6000828211156113fa576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061144157805160ff191683800117855561146e565b8280016001018555821561146e579182015b8281111561146e578251825591602001919060010190611453565b5061147a92915061149e565b5090565b8154818355818111156107bd576000838152602090206107bd9181019083015b6105f191905b8082111561147a57600081556001016114a456fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a723158201db06ebfd4775310c6843663c8345018ddb4120442e8ad6580ae9755d737bacb64736f6c63430005110032",
  "sourceMap": "53:312:1:-;;;93:63;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;36885:155:0;;;;;;;;;;;-1:-1:-1;;;36885:155:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;36885:155:0;;;;;;;10817:40;-1:-1:-1;;;;;;;;10817:18:0;:40;:::i;:::-;13817;-1:-1:-1;;;;;;;;13817:18:0;:40;:::i;:::-;25848:51;-1:-1:-1;;;;;;;;25848:18:0;:51;:::i;:::-;34520:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;34542:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;34646:49:0;-1:-1:-1;;;;;;;;34646:18:0;:49;:::i;:::-;34448:254;;36885:155;;53:312:1;;11541:190:0;-1:-1:-1;;;;;;11616:25:0;;;;;11608:66;;;;;-1:-1:-1;;;11608:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11684:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;11684:40:0;11720:4;11684:40;;;11541:190::o;53:312:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;53:312:1;;;-1:-1:-1;53:312:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "53:312:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53:312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11014:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11014:133:0;-1:-1:-1;;;;;;11014:133:0;;:::i;:::-;;;;;;;;;;;;;;;;;;34807:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;34807:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15834:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15834:200:0;;:::i;:::-;;;;-1:-1:-1;;;;;15834:200:0;;;;;;;;;;;;;;15138:411;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15138:411:0;;;;;;;;:::i;:::-;;26662:94;;;:::i;:::-;;;;;;;;;;;;;;;;17474:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17474:285:0;;;;;;;;;;;;;;;;;:::i;26280:229::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;26280:229:0;;;;;;;;:::i;18392:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18392:132:0;;;;;;;;;;;;;;;;;:::i;27094:196::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27094:196:0;;:::i;14494:223::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14494:223:0;;:::i;14068:207::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14068:207:0;-1:-1:-1;;;;;14068:207:0;;:::i;34999:87::-;;;:::i;16327:243::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;16327:243:0;;;;;;;;;;:::i;19229:265::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;19229:265:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;19229:265:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;19229:265:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;19229:265:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;19229:265:0;;-1:-1:-1;19229:265:0;;-1:-1:-1;;;;;19229:265:0:i;35286:202::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;35286:202:0;;:::i;160::1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;160:202:1;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;160:202:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;160:202:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;160:202:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;160:202:1;;-1:-1:-1;160:202:1;;-1:-1:-1;;;;;160:202:1:i;16892:145:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;16892:145:0;;;;;;;;;;:::i;11014:133::-;-1:-1:-1;;;;;;11107:33:0;11084:4;11107:33;;;;;;;;;;;;;;11014:133::o;34807:83::-;34878:5;34871:12;;;;;;;;-1:-1:-1;;34871:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34846:13;;34871:12;;34878:5;;34871:12;;34878:5;34871:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34807:83;;:::o;15834:200::-;15893:7;15920:16;15928:7;15920;:16::i;:::-;15912:73;;;;-1:-1:-1;;;15912:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16003:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;16003:24:0;;15834:200::o;15138:411::-;15201:13;15217:16;15225:7;15217;:16::i;:::-;15201:32;;15257:5;-1:-1:-1;;;;;15251:11:0;:2;-1:-1:-1;;;;;15251:11:0;;;15243:57;;;;-1:-1:-1;;;15243:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15319:10;-1:-1:-1;;;;;15319:19:0;;;;:58;;;15342:35;15359:5;15366:10;15342:16;:35::i;:::-;15311:148;;;;-1:-1:-1;;;15311:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15470:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;15470:29:0;-1:-1:-1;;;;;15470:29:0;;;;;;;;;15514:28;;15470:24;;15514:28;;;;;;;15138:411;;;:::o;26662:94::-;26732:10;:17;26662:94;:::o;17474:285::-;17616:39;17635:10;17647:7;17616:18;:39::i;:::-;17608:101;;;;-1:-1:-1;;;17608:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17720:32;17734:4;17740:2;17744:7;17720:13;:32::i;:::-;17474:285;;;:::o;26280:229::-;26360:7;26395:16;26405:5;26395:9;:16::i;:::-;26387:5;:24;26379:80;;;;-1:-1:-1;;;26379:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26476:19:0;;;;;;:12;:19;;;;;:26;;26496:5;;26476:26;;;;;;;;;;;;;;26469:33;;26280:229;;;;:::o;18392:132::-;18478:39;18495:4;18501:2;18505:7;18478:39;;;;;;;;;;;;:16;:39::i;27094:196::-;27152:7;27187:13;:11;:13::i;:::-;27179:5;:21;27171:78;;;;-1:-1:-1;;;27171:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27266:10;27277:5;27266:17;;;;;;;;;;;;;;;;27259:24;;27094:196;;;:::o;14494:223::-;14549:7;14584:20;;;:11;:20;;;;;;-1:-1:-1;;;;;14584:20:0;14622:19;14614:73;;;;-1:-1:-1;;;14614:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14705:5;14494:223;-1:-1:-1;;14494:223:0:o;14068:207::-;14123:7;-1:-1:-1;;;;;14150:19:0;;14142:74;;;;-1:-1:-1;;;14142:74:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14234:24:0;;;;;;:17;:24;;;;;:34;;:32;:34::i;34999:87::-;35072:7;35065:14;;;;;;;;-1:-1:-1;;35065:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35040:13;;35065:14;;35072:7;;35065:14;;35072:7;35065:14;;;;;;;;;;;;;;;;;;;;;;;;16327:243;-1:-1:-1;;;;;16406:16:0;;16412:10;16406:16;;16398:54;;;;;-1:-1:-1;;;16398:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;16482:10;16463:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;16463:34:0;;;;;;;;;;;;:45;;-1:-1:-1;;16463:45:0;;;;;;;;;;16523:40;;;;;;;16463:34;;16482:10;16523:40;;;;;;;;;;;16327:243;;:::o;19229:265::-;19335:31;19348:4;19354:2;19358:7;19335:12;:31::i;:::-;19384:48;19407:4;19413:2;19417:7;19426:5;19384:22;:48::i;:::-;19376:111;;;;-1:-1:-1;;;19376:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19229:265;;;;:::o;35286:202::-;35344:13;35377:16;35385:7;35377;:16::i;:::-;35369:76;;;;-1:-1:-1;;;35369:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35462:19;;;;:10;:19;;;;;;;;;35455:26;;;;;;-1:-1:-1;;35455:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35462:19;;35455:26;;35462:19;35455:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35286:202;;;:::o;160::1:-;227:4;239:13;255:20;273:1;255:13;:11;:13::i;:::-;:17;:20;:17;:20;:::i;:::-;239:36;;281:20;287:3;292:8;281:5;:20::i;:::-;307:33;320:8;330:9;307:12;:33::i;:::-;-1:-1:-1;353:4:1;;160:202;-1:-1:-1;;;160:202:1:o;16892:145:0:-;-1:-1:-1;;;;;16995:25:0;;;16972:4;16995:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;16892:145::o;19689:152::-;19746:4;19778:20;;;:11;:20;;;;;;-1:-1:-1;;;;;19778:20:0;19815:19;;;19689:152::o;20202:329::-;20287:4;20311:16;20319:7;20311;:16::i;:::-;20303:73;;;;-1:-1:-1;;;20303:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20386:13;20402:16;20410:7;20402;:16::i;:::-;20386:32;;20447:5;-1:-1:-1;;;;;20436:16:0;:7;-1:-1:-1;;;;;20436:16:0;;:51;;;;20480:7;-1:-1:-1;;;;;20456:31:0;:20;20468:7;20456:11;:20::i;:::-;-1:-1:-1;;;;;20456:31:0;;20436:51;:87;;;;20491:32;20508:5;20515:7;20491:16;:32::i;:::-;20428:96;20202:329;-1:-1:-1;;;;20202:329:0:o;27665:239::-;27750:38;27770:4;27776:2;27780:7;27750:19;:38::i;:::-;27799:47;27832:4;27838:7;27799:32;:47::i;:::-;27857:40;27885:2;27889:7;27857:27;:40::i;9739:112::-;9830:14;;9739:112::o;23368:347::-;23489:4;23514:15;:2;-1:-1:-1;;;;;23514:13:0;;:15::i;:::-;23509:58;;-1:-1:-1;23552:4:0;23545:11;;23509:58;23593:70;;-1:-1:-1;;;23593:70:0;;23630:10;23593:70;;;;;;-1:-1:-1;;;;;23593:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;23577:13;;23593:36;;;;;;23630:10;;23642:4;;23648:7;;23657:5;;23593:70;;;;;;;;;;;23577:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;23593:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23593:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23593:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23593:70:0;-1:-1:-1;;;;;;23681:26:0;-1:-1:-1;;;23681:26:0;;-1:-1:-1;;23368:347:0;;;;;;:::o;4946:176::-;5004:7;5035:5;;;5058:6;;;;5050:46;;;;;-1:-1:-1;;;5050:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;5114:1;4946:176;-1:-1:-1;;;4946:176:0:o;28161:196::-;28224:24;28236:2;28240:7;28224:11;:24::i;:::-;28259:40;28287:2;28291:7;28259:27;:40::i;:::-;28310;28342:7;28310:31;:40::i;:::-;28161:196;;:::o;35727:192::-;35812:16;35820:7;35812;:16::i;:::-;35804:73;;;;-1:-1:-1;;;35804:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35887:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;22348:447::-;22461:4;-1:-1:-1;;;;;22441:24:0;:16;22449:7;22441;:16::i;:::-;-1:-1:-1;;;;;22441:24:0;;22433:78;;;;-1:-1:-1;;;22433:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22529:16:0;;22521:65;;;;-1:-1:-1;;;22521:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22597:23;22612:7;22597:14;:23::i;:::-;-1:-1:-1;;;;;22631:23:0;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;22676:21:0;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;22720:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;22720:25:0;-1:-1:-1;;;;;22720:25:0;;;;;;;;;22761:27;;22720:20;;22761:27;;;;;;;22348:447;;;:::o;30773:1128::-;-1:-1:-1;;;;;31060:18:0;;31035:22;31060:18;;;:12;:18;;;;;:25;:32;;31090:1;31060:32;:29;:32;:::i;:::-;31102:18;31123:26;;;:17;:26;;;;;;31035:57;;-1:-1:-1;31253:28:0;;;31249:323;;-1:-1:-1;;;;;31319:18:0;;31297:19;31319:18;;;:12;:18;;;;;:34;;31338:14;;31319:34;;;;;;;;;;;;;;31297:56;;31401:11;31368:12;:18;31381:4;-1:-1:-1;;;;;31368:18:0;-1:-1:-1;;;;;31368:18:0;;;;;;;;;;;;31387:10;31368:30;;;;;;;;;;;;;;;;;;;:44;;;;31484:30;;;:17;:30;;;;;:43;;;31249:323;-1:-1:-1;;;;;31658:18:0;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;31658:27:0;;;:::i;:::-;;30773:1128;;;;:::o;29619:183::-;-1:-1:-1;;;;;29732:16:0;;;;;;;:12;:16;;;;;;;;:23;;29703:26;;;:17;:26;;;;;:52;;;29765:16;;;39:1:-1;23:18;;45:23;;29765:30:0;;;;;;;;29619:183::o;8236:413::-;8596:20;8634:8;;;8236:413::o;20776:327::-;-1:-1:-1;;;;;20847:16:0;;20839:61;;;;;-1:-1:-1;;;20839:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20919:16;20927:7;20919;:16::i;:::-;20918:17;20910:58;;;;;-1:-1:-1;;;20910:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;20979:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;20979:25:0;-1:-1:-1;;;;;20979:25:0;;;;;;;;21014:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;21063;;21088:7;;-1:-1:-1;;;;;21063:33:0;;;21080:1;;21063:33;;21080:1;;21063:33;20776:327;;:::o;29997:161::-;30100:10;:17;;30073:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;30127:24:0;;;;;;;29997:161::o;23877:171::-;23976:1;23940:24;;;:15;:24;;;;;;-1:-1:-1;;;;;23940:24:0;:38;23936:106;;24029:1;23994:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;23994:37:0;;;23936:106;23877:171;:::o;9952:108::-;10032:14;;:21;;10051:1;10032:21;:18;:21;:::i;:::-;10015:38;;9952:108::o;9857:89::-;9920:19;;9938:1;9920:19;;;9857:89::o;5386:179::-;5444:7;5476:1;5471;:6;;5463:49;;;;;-1:-1:-1;;;5463:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:5:0;;;5386:179::o;53:312:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;53:312:1;;;-1:-1:-1;53:312:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC721Full.sol\";\n\ncontract MemoryToken is ERC721Full {\n\n  constructor() ERC721Full(\"Memory Token\", \"MEMORY\") public {\n  }\n\n  function mint(address _to, string memory _tokenURI) public returns(bool) {\n    uint _tokenId = totalSupply().add(1);\n    _mint(_to, _tokenId);\n    _setTokenURI(_tokenId, _tokenURI);\n    return true;\n  }\n\n}\n",
  "sourcePath": "/Users/leandrofranchi/work/projects/lfr/blockchain/blockchain_game/src/contracts/MemoryToken.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/MemoryToken.sol",
    "exportedSymbols": {
      "MemoryToken": [
        1498
      ]
    },
    "id": 1499,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1456,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "project:/src/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 1457,
        "nodeType": "ImportDirective",
        "scope": 1499,
        "sourceUnit": 1455,
        "src": "25:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1458,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1454,
              "src": "77:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1454",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 1459,
            "nodeType": "InheritanceSpecifier",
            "src": "77:10:1"
          }
        ],
        "contractDependencies": [
          9,
          110,
          372,
          930,
          955,
          1288,
          1309,
          1434,
          1454
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1498,
        "linearizedBaseContracts": [
          1498,
          1454,
          1434,
          1309,
          1288,
          955,
          930,
          110,
          372,
          9
        ],
        "name": "MemoryToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1466,
              "nodeType": "Block",
              "src": "151:5:1",
              "statements": []
            },
            "documentation": null,
            "id": 1467,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d656d6f727920546f6b656e",
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "118:14:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_820d35e3ee6e38b7fca5ae4ff0805e7ba0cc1cdd6864964b6de0cfc516bee43d",
                      "typeString": "literal_string \"Memory Token\""
                    },
                    "value": "Memory Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d454d4f5259",
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "134:8:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7c3eacacf21a8eeced93c68323c8b34ed481f107a1b8c957e6a6c07272fa4900",
                      "typeString": "literal_string \"MEMORY\""
                    },
                    "value": "MEMORY"
                  }
                ],
                "id": 1464,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1461,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1454,
                  "src": "107:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1454_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "107:36:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "104:2:1"
            },
            "returnParameters": {
              "id": 1465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "151:0:1"
            },
            "scope": 1498,
            "src": "93:63:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "233:129:1",
              "statements": [
                {
                  "assignments": [
                    1477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1477,
                      "name": "_tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1496,
                      "src": "239:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1476,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "239:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1483,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "273:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1478,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1023
                          ],
                          "referencedDeclaration": 1023,
                          "src": "255:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "255:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 151,
                      "src": "255:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "255:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "239:36:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1485,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "287:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1486,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1477,
                        "src": "292:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1484,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1095
                      ],
                      "referencedDeclaration": 1095,
                      "src": "281:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "281:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1488,
                  "nodeType": "ExpressionStatement",
                  "src": "281:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1490,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1477,
                        "src": "320:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1491,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "330:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1489,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "307:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "307:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1493,
                  "nodeType": "ExpressionStatement",
                  "src": "307:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "353:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1475,
                  "id": 1495,
                  "nodeType": "Return",
                  "src": "346:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1469,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "174:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "174:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1471,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "187:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "173:38:1"
            },
            "returnParameters": {
              "id": 1475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1474,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "227:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "226:6:1"
            },
            "scope": 1498,
            "src": "160:202:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1499,
        "src": "53:312:1"
      }
    ],
    "src": "0:366:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/contracts/MemoryToken.sol",
      "exportedSymbols": {
        "MemoryToken": [
          1498
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1456,
        "name": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "attributes": {
          "SourceUnit": 1455,
          "absolutePath": "project:/src/contracts/ERC721Full.sol",
          "file": "./ERC721Full.sol",
          "scope": 1499,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1457,
        "name": "ImportDirective",
        "src": "25:26:1"
      },
      {
        "attributes": {
          "contractDependencies": [
            9,
            110,
            372,
            930,
            955,
            1288,
            1309,
            1434,
            1454
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1498,
            1454,
            1434,
            1309,
            1288,
            955,
            930,
            110,
            372,
            9
          ],
          "name": "MemoryToken",
          "scope": 1499
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Full",
                  "referencedDeclaration": 1454,
                  "type": "contract ERC721Full"
                },
                "id": 1458,
                "name": "UserDefinedTypeName",
                "src": "77:10:1"
              }
            ],
            "id": 1459,
            "name": "InheritanceSpecifier",
            "src": "77:10:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1498,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1460,
                "name": "ParameterList",
                "src": "104:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1465,
                "name": "ParameterList",
                "src": "151:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1454,
                      "type": "type(contract ERC721Full)",
                      "value": "ERC721Full"
                    },
                    "id": 1461,
                    "name": "Identifier",
                    "src": "107:10:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4d656d6f727920546f6b656e",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Memory Token\"",
                      "value": "Memory Token"
                    },
                    "id": 1462,
                    "name": "Literal",
                    "src": "118:14:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4d454d4f5259",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"MEMORY\"",
                      "value": "MEMORY"
                    },
                    "id": 1463,
                    "name": "Literal",
                    "src": "134:8:1"
                  }
                ],
                "id": 1464,
                "name": "ModifierInvocation",
                "src": "107:36:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1466,
                "name": "Block",
                "src": "151:5:1"
              }
            ],
            "id": 1467,
            "name": "FunctionDefinition",
            "src": "93:63:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1498,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 1497,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1468,
                        "name": "ElementaryTypeName",
                        "src": "174:7:1"
                      }
                    ],
                    "id": 1469,
                    "name": "VariableDeclaration",
                    "src": "174:11:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenURI",
                      "scope": 1497,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1470,
                        "name": "ElementaryTypeName",
                        "src": "187:6:1"
                      }
                    ],
                    "id": 1471,
                    "name": "VariableDeclaration",
                    "src": "187:23:1"
                  }
                ],
                "id": 1472,
                "name": "ParameterList",
                "src": "173:38:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1497,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1473,
                        "name": "ElementaryTypeName",
                        "src": "227:4:1"
                      }
                    ],
                    "id": 1474,
                    "name": "VariableDeclaration",
                    "src": "227:4:1"
                  }
                ],
                "id": 1475,
                "name": "ParameterList",
                "src": "226:6:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1477
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "_tokenId",
                          "scope": 1496,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 1476,
                            "name": "ElementaryTypeName",
                            "src": "239:4:1"
                          }
                        ],
                        "id": 1477,
                        "name": "VariableDeclaration",
                        "src": "239:13:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 151,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        1023
                                      ],
                                      "referencedDeclaration": 1023,
                                      "type": "function () view returns (uint256)",
                                      "value": "totalSupply"
                                    },
                                    "id": 1478,
                                    "name": "Identifier",
                                    "src": "255:11:1"
                                  }
                                ],
                                "id": 1479,
                                "name": "FunctionCall",
                                "src": "255:13:1"
                              }
                            ],
                            "id": 1480,
                            "name": "MemberAccess",
                            "src": "255:17:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 1481,
                            "name": "Literal",
                            "src": "273:1:1"
                          }
                        ],
                        "id": 1482,
                        "name": "FunctionCall",
                        "src": "255:20:1"
                      }
                    ],
                    "id": 1483,
                    "name": "VariableDeclarationStatement",
                    "src": "239:36:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1095
                              ],
                              "referencedDeclaration": 1095,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1484,
                            "name": "Identifier",
                            "src": "281:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1469,
                              "type": "address",
                              "value": "_to"
                            },
                            "id": 1485,
                            "name": "Identifier",
                            "src": "287:3:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1477,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1486,
                            "name": "Identifier",
                            "src": "292:8:1"
                          }
                        ],
                        "id": 1487,
                        "name": "FunctionCall",
                        "src": "281:20:1"
                      }
                    ],
                    "id": 1488,
                    "name": "ExpressionStatement",
                    "src": "281:20:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1403,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 1489,
                            "name": "Identifier",
                            "src": "307:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1477,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1490,
                            "name": "Identifier",
                            "src": "320:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1471,
                              "type": "string memory",
                              "value": "_tokenURI"
                            },
                            "id": 1491,
                            "name": "Identifier",
                            "src": "330:9:1"
                          }
                        ],
                        "id": 1492,
                        "name": "FunctionCall",
                        "src": "307:33:1"
                      }
                    ],
                    "id": 1493,
                    "name": "ExpressionStatement",
                    "src": "307:33:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1475
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 1494,
                        "name": "Literal",
                        "src": "353:4:1"
                      }
                    ],
                    "id": 1495,
                    "name": "Return",
                    "src": "346:11:1"
                  }
                ],
                "id": 1496,
                "name": "Block",
                "src": "233:129:1"
              }
            ],
            "id": 1497,
            "name": "FunctionDefinition",
            "src": "160:202:1"
          }
        ],
        "id": 1498,
        "name": "ContractDefinition",
        "src": "53:312:1"
      }
    ],
    "id": 1499,
    "name": "SourceUnit",
    "src": "0:366:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x717e093B7d631Ea2EAC62073D2d79090CE6BEbAB",
      "transactionHash": "0x66f4e859887b2d634f1c71b2783fd6117499b19ea4e27c72382117cf1799c5bc"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-20T19:09:19.112Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}